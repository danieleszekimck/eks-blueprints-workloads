apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: app1-ue1-rollout
  namespace: app1-ue1-dev
  labels:
    app: app1-ue1
spec:
  replicas: 3
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: app1-ue1
  template:
    metadata:
      labels:
        app: app1-ue1
    spec:
      containers:
      - name: app1
        image: 993866564897.dkr.ecr.us-east-1.amazonaws.com/haleon-demo-version0:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
            requests:
                memory: "64Mi"
                cpu: "250m"
            limits:
                memory: "128Mi"
                cpu: "500m"
  strategy:
    blueGreen:
      autoPromotionEnabled: false
      activeService: app1-service-ue1
      previewService: app1-service-ue1-preview
---

apiVersion: v1
kind: Service
metadata:
  name: app1-service-ue1-preview
  namespace: app1-ue1-dev
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  type: NodePort
  selector:
    app: app1-ue1

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: skiapp-ingress-preview
  namespace: app1-ue1-dev
  annotations:
    alb.ingress.kubernetes.io/group.name: ue1-preview
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
spec:
  ingressClassName: alb
  rules:
  - host: #skiapprev.{{ .Values.spec.ingress.host }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app1-service-ue1-preview
            port:
              number: 80
